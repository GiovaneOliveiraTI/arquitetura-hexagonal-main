<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f00067f1-728f-4508-b8ce-e8c5ea8cd4bb" name="Changes" comment="Preparando o banco de dados em memoria sqlite3">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/adapters/db/product.go" beforeDir="false" afterPath="$PROJECT_DIR$/adapters/db/product.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/adapters/db/product_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/adapters/db/product_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/application/Product_Service.go" beforeDir="false" afterPath="$PROJECT_DIR$/application/Product_Service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db.sqlte3.db" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3.db" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.17" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;GiovaneOliveiraTI&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="178bf938-beec-4a55-b613-6cef9325856c" />
        <option name="url" value="https://github.com/GiovaneOliveiraTI/arquitetura-hexagonal-main.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/go/go1.17/src/database/sql/sql.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/go1.17/src/runtime/panic.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/go1.17/src/testing/testing.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2XsBRbDyxPuzmZoAIB28lIYvLlm" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/Giovane/OneDrive/Documentos/Cursos/ArquiteturaHexagonal/arquitetura-hexagonal-main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "go",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "sqlite"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Go Test.TestProductDb_Get in github.com/codeedu/go-hexagonal/adapters/db (1)">
    <configuration name="TestProductDb_Get in github.com/codeedu/go-hexagonal/adapters/db (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="arquitetura-hexagonal-main" />
      <working_directory value="$PROJECT_DIR$/adapters/db" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/codeedu/go-hexagonal/adapters/db" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProductDb_Get\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProductDb_Get in github.com/codeedu/go-hexagonal/adapters/db" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="arquitetura-hexagonal-main" />
      <working_directory value="$PROJECT_DIR$/adapters/db" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/codeedu/go-hexagonal/adapters/db" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProductDb_Get\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProductService_Create in github.com/codeedu/go-hexagonal/application" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="arquitetura-hexagonal-main" />
      <working_directory value="$PROJECT_DIR$/application" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/codeedu/go-hexagonal/application" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProductService_Create\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProductService_Get in github.com/codeedu/go-hexagonal/application" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="arquitetura-hexagonal-main" />
      <working_directory value="$PROJECT_DIR$/application" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/codeedu/go-hexagonal/application" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProductService_Get\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/codeedu/go-hexagonal/application (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="arquitetura-hexagonal-main" />
      <working_directory value="$PROJECT_DIR$/application" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/codeedu/go-hexagonal/application" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestProductDb_Get in github.com/codeedu/go-hexagonal/adapters/db (1)" />
        <item itemvalue="Go Test.TestProductDb_Get in github.com/codeedu/go-hexagonal/adapters/db" />
        <item itemvalue="Go Test.go test github.com/codeedu/go-hexagonal/application (1)" />
        <item itemvalue="Go Test.TestProductService_Create in github.com/codeedu/go-hexagonal/application" />
        <item itemvalue="Go Test.TestProductService_Get in github.com/codeedu/go-hexagonal/application" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f00067f1-728f-4508-b8ce-e8c5ea8cd4bb" name="Changes" comment="" />
      <created>1699407899557</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1699407899557</updated>
      <workItem from="1699407900697" duration="1609000" />
      <workItem from="1699492804169" duration="3928000" />
    </task>
    <task id="LOCAL-00001" summary="Commit initial Go">
      <created>1699409424089</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1699409424089</updated>
    </task>
    <task id="LOCAL-00002" summary="Validando primeiro teste em go.">
      <created>1699496836152</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1699496836152</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Commit initial Go" />
    <MESSAGE value="Validando primeiro teste em go." />
    <MESSAGE value="Implementando e testando metodos." />
    <MESSAGE value="Implementando interfaces de service, writer, reader e persistencia." />
    <MESSAGE value="Trabalhando com gomock e mockgen" />
    <MESSAGE value="Testando services com mockgen" />
    <MESSAGE value="classe gerada pelo gomock" />
    <MESSAGE value="Criando estrutura de adapters" />
    <MESSAGE value="Preparando o banco de dados em memoria sqlite3" />
    <option name="LAST_COMMIT_MESSAGE" value="Preparando o banco de dados em memoria sqlite3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/application/product.go</url>
          <line>95</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/adapters/db/product_test.go</url>
          <line>13</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>